jobs:
  verify:
    name: Verify
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Check Out Release Verification Tests
      uses: actions/checkout@v4
      with:
        ref: v0.0.3
        repository: spring-projects/spring-boot-release-verification
        token: ${{ secrets.token }}
    - continue-on-error: true
      name: Check Out Send Notification Action
      uses: actions/checkout@v4
      with:
        path: spring-boot
        sparse-checkout: .github/actions/send-notification
    - continue-on-error: true
      name: Set Up Java
      uses: actions/setup-java@v4
      with:
        distribution: liberica
        java-version: 17
    - continue-on-error: true
      name: Set Up Homebrew
      uses: Homebrew/actions/setup-homebrew@7657c9512f50e1c35b640971116425935bab3eea
    - continue-on-error: true
      name: Set Up Gradle
      uses: gradle/actions/setup-gradle@d9c87d481d55275bb5441eef3fe0e46805f9ef70
      with:
        cache-read-only: false
    - continue-on-error: true
      name: Configure Gradle Properties
      run: 'mkdir -p $HOME/.gradle

        echo ''org.gradle.daemon=false'' >> $HOME/.gradle/gradle.properties

        '
      shell: bash
    - continue-on-error: true
      env:
        RVT_OSS_REPOSITORY_PASSWORD: ${{ secrets.repository-password }}
        RVT_OSS_REPOSITORY_USERNAME: ${{ secrets.repository-username }}
        RVT_RELEASE_TYPE: oss
        RVT_STAGING: ${{ inputs.staging }}
        RVT_VERSION: ${{ inputs.version }}
      name: Run Release Verification Tests
      run: ./gradlew spring-boot-release-verification-tests:test
    - continue-on-error: true
      if: failure()
      name: Upload Build Reports on Failure
      uses: actions/upload-artifact@v4
      with:
        name: build-reports
        path: '**/build/reports/'
    - continue-on-error: true
      if: always()
      name: Send Notification
      uses: ./spring-boot/.github/actions/send-notification
      with:
        run-name: ${{ format('{0} | Verification | {1}', github.ref_name, inputs.version)
          }}
        status: ${{ job.status }}
        webhook-url: ${{ secrets.google-chat-webhook-url }}
name: Verify
on:
  repository_dispatch:
    types: trigger-ga___verify.yml
